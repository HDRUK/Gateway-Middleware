version: 0.2 
 
phases: 
  install: 
    commands: 
      #- echo install step... 
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2& 
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done" 
  #If you use the Ubuntu standard image 2.0 or later 
    runtime-versions: 
      docker: 18 
      nodejs: 8 
 
  pre_build: 
    commands: 
      - echo Logging in to Amazon ECR...  
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION) 
     
     
  build: 
    commands: 
      - echo Build started on `date` 
      - echo Building the Docker image...           
      - docker build \
        --build-arg database=${DATABASE} \
        --build-arg dbuser=${DATABASE_USER} \
        --build-arg dbpassword=${DATABASE_PASSWORD} \
        --build-arg dbhost=${DATABASE_HOST} \
        --build-arg dbport=${DATABASE_PORT} \
        --build-arg middlewareport=${PORT} \
        --build-arg middlewareenv=${NODE_ENV} \
        --build-arg apiurl=${API_BASE_URL} \
        --build-arg apilogin=${API_LOGIN} \
        --build-arg apilogout=${API_LOGOUT} \
        --build-arg apisearch=${API_SEARCH} \
        --build-arg datamodels=${API_ALL_DATAMODELS} \
        --build-arg domaintypes=${API_DOMAINTYPES} \
        --build-arg datamodeltypes=${API_DATAMODELTYPES} \
        -t $IMAGE_REPO_NAME:$IMAGE_TAG . 
       
  post_build: 
    commands: 
      - echo Build completed on `date` 
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG       
      - echo Pushing the Docker image... 
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPO:$IMAGE_TAG 
 

